---
# PRIMARY CONTROLLER
- name: Unmount SASWORK and SASCACHE from Primary Sandbox Controller (i-057fc79a3326922e5)
  hosts: deployTarget
  gather_facts: no
  become: yes
  become_user: root
  tasks:
    - name: Unmount SASWORK
      mount:
        path: /saswork
        state: absent
    - name: Unmount SASCACHE
      mount:
        path: /sascache
        state: absent

- name: Remove temporary EBS volumes from Primary Sandbox Controller (i-057fc79a3326922e5)
  hosts: localhost
  gather_facts: false
  connection: local

  tasks:
    - name: Get Volume Information for Instance
      ec2_vol_facts:
        filters:
          "attachment.instance-id": i-057fc79a3326922e5
          "tag:Name": SANDBOX_TEMP
      register: volume_facts

    - name: Store Volume ID(s)
      set_fact:
        ebs_volumes_to_remove: "{{ volume_facts.volumes | map(attribute='id') | list }}"

    - name: EBS Volume IDs to Remove
      debug:
        var: ebs_volumes_to_remove

    - name: Detach Volume(s) from instance i-057fc79a3326922e5
      command: aws ec2 detach-volume --volume-id {{ item }}
      with_items: "{{ ebs_volumes_to_remove }}"

    - name: Pausing to allow EBS detachment
      pause:
        seconds: 60

    - name: Remove Volume(s) from instance i-057fc79a3326922e5
      command: aws ec2 delete-volume --volume-id {{ item }}
      with_items: "{{ ebs_volumes_to_remove }}"

 # CAS Worker 1
- name: Unmount SASCACHE from CAS Worker 1 (i-0400d97509290e60e)
  hosts: casworker1
  gather_facts: no
  become: yes
  become_user: root
  tasks:
    - name: Unmount known temporary volumes
      mount:
        path: /sascache
        state: absent

- name: Remove temporary EBS volumes from CAS Worker 1 (i-0400d97509290e60e)
  hosts: localhost
  gather_facts: false
  connection: local

  tasks:
    - name: Get Volume Information for Instance
      ec2_vol_facts:
        filters:
          "attachment.instance-id": i-0400d97509290e60e
          "tag:Name": SANDBOX_TEMP
      register: volume_facts

    - name: Store Volume ID(s)
      set_fact:
        ebs_volumes_to_remove: "{{ volume_facts.volumes | map(attribute='id') | list }}"

    - name: EBS Volume IDs to Remove
      debug:
        var: ebs_volumes_to_remove

    - name: Detach Volume(s) from instance i-0400d97509290e60e
      command: aws ec2 detach-volume --volume-id {{ item }}
      with_items: "{{ ebs_volumes_to_remove }}"

    - name: Pausing to allow EBS detachment
      pause:
        seconds: 60

    - name: Remove Volume(s) from instance i-0400d97509290e60e
      command: aws ec2 delete-volume --volume-id {{ item }}
      with_items: "{{ ebs_volumes_to_remove }}"
